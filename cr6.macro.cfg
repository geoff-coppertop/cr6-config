[gcode_macro CASE_LED_OFF]
gcode:
  SET_PIN PIN=case_led VALUE=0

[gcode_macro CASE_LED_ON]
gcode:
  SET_PIN PIN=case_led VALUE=1

[gcode_macro CASE_LED_TOGGLE]
gcode:
  SET_PIN PIN=case_led VALUE={(not printer['output_pin case_led'].value)|int}

[gcode_macro HOTEND_LED_OFF]
gcode:
  SET_PIN PIN=hotend_led VALUE=0

[gcode_macro HOTEND_LED_ON]
gcode:
  SET_PIN PIN=hotend_led VALUE=1

[gcode_macro HOTEND_LED_TOGGLE]
gcode:
  SET_PIN PIN=hotend_led VALUE={(not printer['output_pin hotend_led'].value)|int}

# https://github.com/rootiest/zippy-klipper_config/blob/master/macros/SET_MATERIAL.cfg
[gcode_macro MATERIAL_SET]
gcode:
  {% set MATERIAL = params.MATERIAL|default('PLA')|string %}
  {% if MATERIAL == 'PLA' %}
    SET_PRESSURE_ADVANCE ADVANCE=0.3 SMOOTH_TIME=0.040
    SET_RETRACTION RETRACT_LENGTH=2.5 RETRACT_SPEED=100 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=60
  {% elif MATERIAL == 'PETG' %}
    SET_PRESSURE_ADVANCE ADVANCE=0.3 SMOOTH_TIME=0.040
    SET_RETRACTION RETRACT_LENGTH=2.5 RETRACT_SPEED=100 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=60
  {%else %}
    SET_PRESSURE_ADVANCE ADVANCE=0.3 SMOOTH_TIME=0.040
    SET_RETRACTION RETRACT_LENGTH=2.5 RETRACT_SPEED=100 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=60
  {% endif %}

[gcode_macro PRINTER_POWER_OFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro PRINTER_POWER_ON]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="on")}

[gcode_macro PROBE_START]
variable_bed_temp: 0
variable_extruder_temp: 0
gcode:
  {action_respond_info("Start probe")}

  # Save target temperature to extruder_temp variable
  SET_GCODE_VARIABLE MACRO=PROBE_START VARIABLE=extruder_temp VALUE={printer.extruder.target}

  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

  SET_PIN PIN=probe_tare VALUE=0
  G4 P250
  SET_PIN PIN=probe_tare VALUE=1
  G4 P250

[gcode_macro PROBE_END]
gcode:
  {% set extruder_temp = printer["gcode_macro PROBE_START"].extruder_temp|int %}

  {action_respond_info("End probe")}

  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
  G4 P250

[gcode_macro _SAFE_Z]
variable_safe_z: 0
gcode:
  {% if safe_z == 0 %}
    {action_respond_info("Moving Z-axis to a safe spot")}
    
    {% set safe_z = 10 %}
    SET_KINEMATIC_POSITION Z=0
    G0 Z{safe_z} F600
    M84
    SET_GCODE_VARIABLE MACRO=_SAFE_Z VARIABLE=safe_z VALUE={safe_z}
  {% endif %}

[gcode_macro _HOME_X]
gcode:
  {% set HOME_CUR = 0.700 %}
  {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
  {% set RUN_CUR = driver_config.run_current %}

  {action_respond_info("Homing X")}

  # Set current for sensorless homing
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
  # Pause to ensure driver stall flag is clear
  G4 P2000
  # Home
  G28 X
  # Move away
  G90
  G1 X5 F1200
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

[gcode_macro _HOME_Y]
gcode:
  {action_respond_info("Homing Y")}

  # Home
  G28 Y
  # Move away
  G90
  G1 Y5 F1200

[gcode_macro _HOME_Z]
gcode:
  {% set toolhead = printer.toolhead %}
  {% set x_mid = ( toolhead.axis_minimum.x + toolhead.axis_maximum.x ) / 2 %}
  {% set y_mid = ( toolhead.axis_minimum.y + toolhead.axis_maximum.y ) / 2 %}
  {% set safe_z = printer["gcode_macro _SAFE_Z"].safe_z|default(10)|int %}

  {action_respond_info("Homing Z")}

  G0 X{x_mid} Y{y_mid}

  G28 Z

  G0 Z{safe_z}

[gcode_macro M84]
rename_existing: M84.1
gcode:
  SET_GCODE_VARIABLE MACRO=_SAFE_Z VARIABLE=safe_z VALUE=0
  M84.1 {rawparams}

[homing_override]
axes: xyz
gcode:
  {% set homed_axes = printer.toolhead.homed_axes %}
  {% set is_g28 = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  {% set is_z = ('x' not in homed_axes or 'y' not in homed_axes) and 'Z' in params %}
  {% set home_all = is_g28 or is_z %}

  # If I want to home X or Y I need Z to be in a safe place
  #   - This means I need to home Z
  # If I want to home Z I need to go to a specific X, Y location
  #   -  requires that

  _SAFE_Z
  
  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}
